// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Track renders properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Track
    createTrack={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          accept=".txt"
          className="inputFile"
          id="file"
          name="file"
          onChange={[Function]}
          type="file"
/>,
        <label
          htmlFor="file"
>
          Choose a file
</label>,
        <table>
          <tbody>
                    <tr>
                              <th>
                                        Time
                              </th>
                              <th>
                                        Event
                              </th>
                    </tr>
          </tbody>
</table>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "accept": ".txt",
          "className": "inputFile",
          "id": "file",
          "name": "file",
          "onChange": [Function],
          "type": "file",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Choose a file",
          "htmlFor": "file",
        },
        "ref": null,
        "rendered": "Choose a file",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <tbody>
            <tr>
                        <th>
                                    Time
                        </th>
                        <th>
                                    Event
                        </th>
            </tr>
</tbody>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <tr>
                <th>
                                Time
                </th>
                <th>
                                Event
                </th>
</tr>,
              undefined,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th>
                    Time
</th>,
                  <th>
                    Event
</th>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Time",
                  },
                  "ref": null,
                  "rendered": "Time",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Event",
                  },
                  "ref": null,
                  "rendered": "Event",
                  "type": "th",
                },
              ],
              "type": "tr",
            },
            undefined,
          ],
          "type": "tbody",
        },
        "type": "table",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            accept=".txt"
            className="inputFile"
            id="file"
            name="file"
            onChange={[Function]}
            type="file"
/>,
          <label
            htmlFor="file"
>
            Choose a file
</label>,
          <table>
            <tbody>
                        <tr>
                                    <th>
                                                Time
                                    </th>
                                    <th>
                                                Event
                                    </th>
                        </tr>
            </tbody>
</table>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "accept": ".txt",
            "className": "inputFile",
            "id": "file",
            "name": "file",
            "onChange": [Function],
            "type": "file",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Choose a file",
            "htmlFor": "file",
          },
          "ref": null,
          "rendered": "Choose a file",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <tbody>
              <tr>
                            <th>
                                          Time
                            </th>
                            <th>
                                          Event
                            </th>
              </tr>
</tbody>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <tr>
                  <th>
                                    Time
                  </th>
                  <th>
                                    Event
                  </th>
</tr>,
                undefined,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th>
                      Time
</th>,
                    <th>
                      Event
</th>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Time",
                    },
                    "ref": null,
                    "rendered": "Time",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Event",
                    },
                    "ref": null,
                    "rendered": "Event",
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
              undefined,
            ],
            "type": "tbody",
          },
          "type": "table",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
